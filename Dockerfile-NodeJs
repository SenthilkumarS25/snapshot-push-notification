# Use the Node.js base image
FROM node:16

# Install Amazon Corretto
RUN apt-get update && apt-get install -y wget curl gnupg

RUN wget -O- https://apt.corretto.aws/corretto.key | sudo apt-key add - \
    && add-apt-repository 'deb https://apt.corretto.aws stable main' \
    && apt-get update && apt-get install -y java-11-amazon-corretto-jdk

# Set environment variables for Android SDK
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator

# Install Android SDK and dependencies
RUN apt-get install -y --no-install-recommends \
    unzip \
    libc6-i386 \
    lib32stdc++6 \
    lib32z1 \
    && rm -rf /var/lib/apt/lists/*

# Download and install Android SDK command-line tools
RUN mkdir -p $ANDROID_SDK_ROOT/cmdline-tools \
    && cd $ANDROID_SDK_ROOT/cmdline-tools \
    && wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip \
    && unzip tools.zip -d latest \
    && rm tools.zip

# Ensure sdkmanager is executable
RUN chmod +x $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager

# Accept the licenses
RUN yes | sdkmanager --licenses

# Update SDK manager and install required SDK packages
RUN sdkmanager --update \
    && sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "emulator" "system-images;android-30;google_apis;x86_64"

# Create and start the emulator
RUN echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64"

# Copy the application files
COPY . /app
WORKDIR /app

# Install Node.js dependencies
RUN npm install

# Copy entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Define the entry point
ENTRYPOINT ["/entrypoint.sh"]
